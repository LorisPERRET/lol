kind: pipeline
type: docker
name: CI_LOL

trigger :
    event:
        - push

steps:
    - name: build
      image: mcr.microsoft.com/dotnet/sdk:7.0
      commands:
        - cd Sources
        - dotnet workload restore
        - dotnet restore LeagueOfLegendsCI.sln
        - dotnet build LeagueOfLegendsCI.sln -c Release --no-restore
        - dotnet publish LeagueOfLegendsCI.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

    - name: tests
      image: mcr.microsoft.com/dotnet/sdk:7.0
      commands:
        - cd Sources
        - dotnet workload restore
        - dotnet restore LeagueOfLegendsCI.sln
        - dotnet test LeagueOfLegendsCI.sln --no-restore
      depends_on: [build]

    - name: code-analysis
      image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet7
      commands:
        - cd Sources/
        - dotnet workload restore
        - dotnet restore LeagueOfLegendsCI.sln
        - dotnet sonarscanner begin /k:LolProject /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
        - dotnet build LeagueOfLegendsCI.sln -c Release --no-restore
        - dotnet test LeagueOfLegendsCI.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
        - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
        - dotnet publish LeagueOfLegendsCI.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
        - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      secrets: [ SECRET_SONAR_LOGIN ]
      settings:
        sonar_host: https://codefirst.iut.uca.fr/sonar/
        sonar_token:
          from_secret: SECRET_SONAR_LOGIN
      depends_on: [tests]

    - name: deploy-container-database
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
          IMAGENAME: mariadb:10
          CONTAINERNAME: LolMySql
          COMMAND: create
          # OVERWRITE: false
          PRIVATE: true
          CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:
            from_secret: db_root_password
          CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
            from_secret: db_database
          CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
            from_secret: db_user
          CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
            from_secret: db_password
          ADMINS: lorisperret,hugolivet
      depends_on: [tests]
    
    - name: docker-build-and-push-image
      image: plugins/docker
      settings:
        dockerfile: Sources/Dockerfile
        context: Sources/
        registry: hub.codefirst.iut.uca.fr
        repo: hub.codefirst.iut.uca.fr/hugo.livet/lol
        username:
          from_secret: SECRET_REGISTRY_USERNAME
        password:
          from_secret: SECRET_REGISTRY_PASSWORD
      depends_on: [tests]

    - name: deploy-container-API
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
          IMAGENAME: hub.codefirst.iut.uca.fr/hugo.livet/lol:latest
          CONTAINERNAME: LolAPI
          COMMAND: create
          OVERWRITE: true
          ADMINS: lorisperret,hugolivet
      depends_on: [docker-build-and-push-image]